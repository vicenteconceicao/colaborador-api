// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using estagio_brg.API.Data;

namespace estagio_brg.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("estagio_brg.API.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cargo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Departamento")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cargo = "Açougueiro",
                            Departamento = "Operacional"
                        },
                        new
                        {
                            Id = 2,
                            Cargo = "Administrador",
                            Departamento = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 3,
                            Cargo = "Analista Administrativo",
                            Departamento = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 4,
                            Cargo = "Almoxarife",
                            Departamento = "Empenho"
                        },
                        new
                        {
                            Id = 5,
                            Cargo = "Administrador de Sistemas",
                            Departamento = "Tributário"
                        },
                        new
                        {
                            Id = 6,
                            Cargo = "Analista de Documentaçãos",
                            Departamento = "Tributário"
                        },
                        new
                        {
                            Id = 7,
                            Cargo = "Ajudante Geral",
                            Departamento = "Geral"
                        });
                });

            modelBuilder.Entity("estagio_brg.API.Models.Habilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Habilidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Gestão de Projetos",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Mecânica de Motores",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Programação",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Domínio de C#",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Domínio de Exel",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Domínio de Contabilidade",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Inglês",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Comunicação Interpessoal",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Persuasão",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Proatividade",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Resiliência",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Resolução de conflitos",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Liderança",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Confiança",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Criatividade",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Comunicação",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Organização",
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("estagio_brg.API.Models.Trilha", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HabilidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("TEXT");

                    b.HasKey("ColaboradorId", "HabilidadeId");

                    b.HasIndex("HabilidadeId");

                    b.ToTable("Trilhas");

                    b.HasData(
                        new
                        {
                            ColaboradorId = 1,
                            HabilidadeId = 8,
                            Id = 1,
                            Prazo = new DateTime(2020, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 1,
                            HabilidadeId = 10,
                            Id = 2,
                            Prazo = new DateTime(2020, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 1,
                            HabilidadeId = 17,
                            Id = 3,
                            Prazo = new DateTime(2020, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 5,
                            HabilidadeId = 3,
                            Id = 4,
                            Prazo = new DateTime(2020, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 5,
                            HabilidadeId = 7,
                            Id = 5,
                            Prazo = new DateTime(2020, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 5,
                            HabilidadeId = 10,
                            Id = 6,
                            Prazo = new DateTime(2020, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 7,
                            HabilidadeId = 2,
                            Id = 7,
                            Prazo = new DateTime(2020, 7, 24, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 7,
                            HabilidadeId = 12,
                            Id = 8,
                            Prazo = new DateTime(2020, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ColaboradorId = 7,
                            HabilidadeId = 15,
                            Id = 9,
                            Prazo = new DateTime(2020, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("estagio_brg.API.Models.Trilha", b =>
                {
                    b.HasOne("estagio_brg.API.Models.Colaborador", "Colaborador")
                        .WithMany("Trilhas")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("estagio_brg.API.Models.Habilidade", "Habilidade")
                        .WithMany("Trilhas")
                        .HasForeignKey("HabilidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
